// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Sprint3_API;

#nullable disable

namespace Sprint3_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Sprint3_API.Models.Cargo", b =>
                {
                    b.Property<int>("CargoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_CARGO");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CargoId"));

                    b.Property<string>("DescricaoCargo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("DESCRICAO_CARGO");

                    b.Property<string>("NomeCargo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NOME_CARGO");

                    b.HasKey("CargoId");

                    b.ToTable("CARGO", (string)null);
                });

            modelBuilder.Entity("Sprint3_API.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_CLIENTE");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClienteId"));

                    b.Property<string>("CpfCliente")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("CPF_CLIENTE");

                    b.Property<string>("EmailCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("EMAIL_CLIENTE");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NOME_CLIENTE");

                    b.Property<char>("SexoCliente")
                        .HasMaxLength(1)
                        .HasColumnType("character(1)")
                        .HasColumnName("SEXO_CLIENTE");

                    b.Property<string>("TelefoneCliente")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("TELEFONE_CLIENTE");

                    b.HasKey("ClienteId");

                    b.HasIndex("CpfCliente")
                        .IsUnique();

                    b.ToTable("CLIENTE", (string)null);
                });

            modelBuilder.Entity("Sprint3_API.Models.Funcionario", b =>
                {
                    b.Property<int>("FuncionarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_FUNCIONARIO");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FuncionarioId"));

                    b.Property<int>("CargoId")
                        .HasColumnType("integer")
                        .HasColumnName("CARGO_ID_CARGO");

                    b.Property<string>("NomeFuncionario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NOME_FUNCIONARIO");

                    b.Property<int>("PatioId")
                        .HasColumnType("integer")
                        .HasColumnName("PATIO_ID_PATIO");

                    b.Property<string>("TelefoneFuncionario")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("TELEFONE_FUNCIONARIO");

                    b.HasKey("FuncionarioId");

                    b.HasIndex("CargoId");

                    b.HasIndex("PatioId");

                    b.ToTable("FUNCIONARIO", (string)null);
                });

            modelBuilder.Entity("Sprint3_API.Models.Gerente", b =>
                {
                    b.Property<int>("GerenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_GERENTE");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GerenteId"));

                    b.Property<string>("CpfGerente")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("CPF_GERENTE");

                    b.Property<string>("NomeGerente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NOME_GERENTE");

                    b.Property<int>("PatioId")
                        .HasColumnType("integer")
                        .HasColumnName("PATIO_ID_PATIO");

                    b.Property<string>("TelefoneGerente")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("TELEFONE_GERENTE");

                    b.HasKey("GerenteId");

                    b.HasIndex("CpfGerente")
                        .IsUnique();

                    b.HasIndex("PatioId");

                    b.ToTable("GERENTE", (string)null);
                });

            modelBuilder.Entity("Sprint3_API.Models.Moto", b =>
                {
                    b.Property<int>("MotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_MOTO");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MotoId"));

                    b.Property<string>("ChassiMoto")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("character varying(17)")
                        .HasColumnName("CHASSI_MOTO");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("integer")
                        .HasColumnName("CLIENTE_ID_CLIENTE");

                    b.Property<string>("ModeloMoto")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)")
                        .HasColumnName("MODELO_MOTO");

                    b.Property<string>("PlacaMoto")
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)")
                        .HasColumnName("PLACA_MOTO");

                    b.Property<string>("SituacaoMoto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("SITUACAO_MOTO");

                    b.HasKey("MotoId");

                    b.HasIndex("ChassiMoto")
                        .IsUnique();

                    b.HasIndex("ClienteId");

                    b.HasIndex("PlacaMoto")
                        .IsUnique();

                    b.ToTable("MOTO", null, t =>
                        {
                            t.HasCheckConstraint("CHK_MODELO_MOTO", "MODELO_MOTO IN ('Mottu Pop', 'Mottu Sport', 'Mottu-E')");

                            t.HasCheckConstraint("CHK_SITUACAO_MOTO", "SITUACAO_MOTO IN ('Inativa', 'Ativa', 'Manutenção', 'Em Trânsito')");
                        });
                });

            modelBuilder.Entity("Sprint3_API.Models.Movimentacao", b =>
                {
                    b.Property<int>("MovimentacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_MOVIMENTACAO");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MovimentacaoId"));

                    b.Property<string>("DescricaoMovimentacao")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("DESCRICAO_MOVIMENTACAO");

                    b.Property<DateTime>("DtEntrada")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DT_ENTRADA");

                    b.Property<DateTime?>("DtSaida")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DT_SAIDA");

                    b.Property<int>("MotoId")
                        .HasColumnType("integer")
                        .HasColumnName("MOTO_ID_MOTO");

                    b.Property<int>("VagaId")
                        .HasColumnType("integer")
                        .HasColumnName("VAGA_ID_VAGA");

                    b.HasKey("MovimentacaoId");

                    b.HasIndex("MotoId");

                    b.HasIndex("VagaId");

                    b.ToTable("MOVIMENTACAO", (string)null);
                });

            modelBuilder.Entity("Sprint3_API.Models.Patio", b =>
                {
                    b.Property<int>("PatioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_PATIO");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PatioId"));

                    b.Property<string>("DescricaoPatio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("DESCRICAO_PATIO");

                    b.Property<string>("LocalizacaoPatio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("LOCALIZACAO_PATIO");

                    b.Property<string>("NomePatio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NOME_PATIO");

                    b.HasKey("PatioId");

                    b.ToTable("PATIO", (string)null);
                });

            modelBuilder.Entity("Sprint3_API.Models.Setor", b =>
                {
                    b.Property<int>("SetorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_SETOR");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SetorId"));

                    b.Property<int>("PatioId")
                        .HasColumnType("integer")
                        .HasColumnName("PATIO_ID_PATIO");

                    b.Property<string>("StatusSetor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("STATUS_SETOR");

                    b.Property<string>("TipoSetor")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)")
                        .HasColumnName("TIPO_SETOR");

                    b.HasKey("SetorId");

                    b.HasIndex("PatioId");

                    b.ToTable("SETOR", null, t =>
                        {
                            t.HasCheckConstraint("CHK_STATUS_SETOR", "STATUS_SETOR IN ('Cheia', 'Parcial', 'Livre')");

                            t.HasCheckConstraint("CHK_TIPO_SETOR", "TIPO_SETOR IN ('Pendência', 'Reparos Simples', 'Danos Estruturais Graves', 'Motor Defeituoso', 'Agendada Para Manutenção', 'Pronta para Aluguel', 'Sem Placa', 'Minha Mottu')");
                        });
                });

            modelBuilder.Entity("Sprint3_API.Models.Vaga", b =>
                {
                    b.Property<int>("VagaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_VAGA");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VagaId"));

                    b.Property<string>("NumeroVaga")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("NUMERO_VAGA");

                    b.Property<int>("SetorId")
                        .HasColumnType("integer")
                        .HasColumnName("SETOR_ID_SETOR");

                    b.Property<int>("StatusOcupada")
                        .HasColumnType("integer")
                        .HasColumnName("STATUS_OCUPADA");

                    b.HasKey("VagaId");

                    b.HasIndex("SetorId");

                    b.ToTable("VAGA", (string)null);
                });

            modelBuilder.Entity("Sprint3_API.Models.Funcionario", b =>
                {
                    b.HasOne("Sprint3_API.Models.Cargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sprint3_API.Models.Patio", "Patio")
                        .WithMany()
                        .HasForeignKey("PatioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargo");

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("Sprint3_API.Models.Gerente", b =>
                {
                    b.HasOne("Sprint3_API.Models.Patio", "Patio")
                        .WithMany()
                        .HasForeignKey("PatioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("Sprint3_API.Models.Moto", b =>
                {
                    b.HasOne("Sprint3_API.Models.Cliente", "Cliente")
                        .WithMany("Motos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Sprint3_API.Models.Movimentacao", b =>
                {
                    b.HasOne("Sprint3_API.Models.Moto", "Moto")
                        .WithMany()
                        .HasForeignKey("MotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sprint3_API.Models.Vaga", "Vaga")
                        .WithMany()
                        .HasForeignKey("VagaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Moto");

                    b.Navigation("Vaga");
                });

            modelBuilder.Entity("Sprint3_API.Models.Setor", b =>
                {
                    b.HasOne("Sprint3_API.Models.Patio", "Patio")
                        .WithMany("Setores")
                        .HasForeignKey("PatioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("Sprint3_API.Models.Vaga", b =>
                {
                    b.HasOne("Sprint3_API.Models.Setor", "Setor")
                        .WithMany("Vagas")
                        .HasForeignKey("SetorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Setor");
                });

            modelBuilder.Entity("Sprint3_API.Models.Cliente", b =>
                {
                    b.Navigation("Motos");
                });

            modelBuilder.Entity("Sprint3_API.Models.Patio", b =>
                {
                    b.Navigation("Setores");
                });

            modelBuilder.Entity("Sprint3_API.Models.Setor", b =>
                {
                    b.Navigation("Vagas");
                });
#pragma warning restore 612, 618
        }
    }
}
